// I think a lot of new things in ES2020

// bigInt
// nullish coalescing operation
// optional chaining operation 
// Promise.allSettled
// globalThis

// BigInt = new data type

typeof 4;       // number
typeof Infinity;        // number

typeof 1n;      // bigint
// want to know more?   https://stackoverflow.com/questions/307179/what-is-javascripts-highest-integer-value-that-a-number-can-go-to-without-losin

// used when we have a number greater than the max-safe-integer

number1 = Number.MAX_SAFE_INTEGER ;     // 9007199254740991

// essentially the most JS can hold in memory (using the integer data type) 

/*
number1 = Number.MAX_SAFE_INTEGER ; 
9007199254740991

bigNum = number1 + Number.MAX_SAFE_INTEGER;
18014398509481982

typeof bigNum; 
'number'

bigerNum = bigNum * bigNum;
3.2451855365842665e+32

typeof bigerNum
'number'

// some really unexpected answer above, mostly, why it stays as a type number tbh. 
*/




























